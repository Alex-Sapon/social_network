{"version":3,"file":"static/js/821.aa20e07b.chunk.js","mappings":"wOAkBA,EATmC,SAAC,GAAe,IAAdA,EAAa,EAAbA,QACjC,OACI,UAACC,EAAA,EAAD,CAAMC,GAAI,CAACC,GAAI,OAAQC,QAAS,UAAhC,WACI,SAACC,EAAA,EAAD,CAAQC,IAAI,SAASC,IAAKC,KAC1B,SAACC,EAAA,EAAD,CAAYP,GAAI,CAACQ,SAAU,UAA3B,SAAuCV,QCZnD,EAAmH,qB,uCCqBnH,EAT+B,SAAC,GAAgB,IAAfW,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjC,OACI,UAACC,EAAA,GAAD,YACI,SAACC,EAAA,EAAD,CAAYZ,GAAI,CAACa,MAAOC,EAAAA,EAAMC,GAAI,aAClC,SAAC,KAAD,CAASC,UAAWC,EAAaC,GAAE,UAAKT,GAAxC,SAA+CC,Q,6BCC3D,GAAeS,E,OAAAA,GAA+B,CAACC,KAAM,eAArD,EAXgE,SAAAC,GAC5D,IAAOC,EAAgBD,EAAhBC,aAEP,OACI,kBAAMC,SAAUD,EAAhB,WACI,SAACE,EAAA,EAAD,CAAOd,KAAK,cAAce,UAAU,WAAWC,KAAK,cACpD,mD,UCECC,EAAkC,SAAAN,GAC3C,IAAOO,EAA+BP,EAA/BO,SAAUC,EAAqBR,EAArBQ,MAAOC,EAAcT,EAAdS,WAElBC,GAAWC,EAAAA,EAAAA,MAQjB,OACI,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACI,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACI,SAAC9B,EAAA,EAAD,CAAYP,GAAI,CAACQ,SAAU,UAA3B,6BAEJ,SAACyB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACI,SAACC,EAAA,EAAD,UACKT,EAAMU,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAsB/B,GAAI+B,EAAK/B,GAAIC,KAAM8B,EAAK9B,MAAjC8B,EAAK/B,YAG7C,UAACwB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACKT,EAASW,KAAI,SAAAE,GAAI,OAAI,SAAC,EAAD,CAAuB3C,QAAS2C,EAAK3C,SAAvB2C,EAAKhC,QACzC,SAAC,EAAD,CAAac,SAlBR,SAACmB,GACd,IAAM5C,EAAU4C,EAASC,YAEzB7C,GAA8B,KAAnBA,EAAQ8C,QAAiBb,EAASD,EAAWhC,c,8BCThE,GAAe+C,EAAAA,EAAAA,IACXC,EAAAA,EADJ,EAP0B,WACtB,IAAMlB,GAAWmB,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,aAAarB,YACtDC,GAAQkB,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,aAAapB,SAEzD,OAAO,SAACF,EAAD,CAAUC,SAAUA,EAAUC,MAAOA,EAAOC,WAAYA,EAAAA,Q,wBCT/DoB,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kHACD,UAEJN,EAAQ,EAAUG","sources":["components/Messages/Message/Message.tsx","webpack://social-app-ts/./src/components/Messages/Dialog/Dialog.module.css?07ac","components/Messages/Dialog/Dialog.tsx","components/Messages/AddMessageForm/AddMessageForm.tsx","components/Messages/Messages.tsx","components/Messages/MessagesContainer.tsx","../node_modules/@mui/icons-material/Person.js"],"sourcesContent":["import React, {FC} from 'react';\r\nimport {Avatar, Card, Typography} from \"@mui/material\";\r\nimport styles from './Message.module.css';\r\nimport avatar from '../../../assets/img/avatar/avatar.jpg';\r\n\r\ntype MessagesProps = {\r\n    message: string\r\n}\r\n\r\nconst Message: FC<MessagesProps> = ({message}) => {\r\n    return (\r\n        <Card sx={{mb: '1rem', padding: '0.4rem'}}>\r\n            <Avatar alt=\"avatar\" src={avatar}/>\r\n            <Typography sx={{fontSize: '0.9rem'}}>{message}</Typography>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialog_dialogs__5Ub3u\",\"title\":\"Dialog_title__jKJEh\",\"list\":\"Dialog_list__OS4a3\",\"item\":\"Dialog_item__tN0Dd\",\"messages\":\"Dialog_messages__NoCQm\"};","import React, {FC} from 'react';\r\nimport styles from './Dialog.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport {grey} from \"@mui/material/colors\";\r\nimport {ListItem} from \"@mui/material\";\r\n\r\ntype DialogType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\nconst Dialog: FC<DialogType> = ({id, name}) => {\r\n    return (\r\n        <ListItem>\r\n            <PersonIcon sx={{color: grey, mr: '0.5rem'}}/>\r\n            <NavLink className={styles.item} to={`${id}`}>{name}</NavLink>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React, {FC} from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form';\r\n\r\nexport type MessageFormDataType = {\r\n    messageForm: string\r\n}\r\n\r\nconst MessageForm: FC<InjectedFormProps<MessageFormDataType>> = props => {\r\n    const {handleSubmit} = props;\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <Field name=\"messageForm\" component=\"textarea\" type=\"textarea\"/>\r\n            <button>Send message</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default reduxForm<MessageFormDataType>({form: 'messageForm'})(MessageForm);\r\n","import React, {FC} from 'react';\r\nimport Message from './Message/Message';\r\nimport Dialog from './Dialog/Dialog';\r\n\r\nimport {Grid, List, Typography} from '@mui/material';\r\nimport {MessageType, UserType} from '../../redux/reducers/messages-reducer';\r\nimport MessageForm, {MessageFormDataType} from './AddMessageForm/AddMessageForm';\r\nimport {useDispatch} from 'react-redux';\r\n\r\ntype MessagesPropsType = {\r\n    messages: Array<MessageType>\r\n    users: Array<UserType>\r\n    addMessage: (message: string) => void\r\n};\r\n\r\nexport const Messages: FC<MessagesPropsType> = props => {\r\n    const {messages, users, addMessage} = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = (formData: MessageFormDataType) => {\r\n        const message = formData.messageForm;\r\n\r\n        message && message.trim() !== '' && dispatch(addMessage(message));\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n                <Typography sx={{fontSize: '1.5rem'}}>Your friends</Typography>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <List>\r\n                    {users.map(user => <Dialog key={user.id} id={user.id} name={user.name}/>)}\r\n                </List>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                {messages.map(text => <Message key={text.id} message={text.message}/>)}\r\n                <MessageForm onSubmit={onSubmit}/>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\n\r\n","import {addMessage} from '../../redux/reducers/messages-reducer';\r\nimport {Messages} from './Messages';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {ComponentType} from 'react';\r\nimport {useAppSelector} from '../../redux/redux-store';\r\n\r\nconst MessagesContainer = () => {\r\n    const messages = useAppSelector(state => state.messagesPage.messages);\r\n    const users = useAppSelector(state => state.messagesPage.users);\r\n\r\n    return <Messages messages={messages} users={users} addMessage={addMessage}/>\r\n};\r\n\r\nexport default compose<ComponentType>(\r\n    withAuthRedirect,\r\n)(MessagesContainer);\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;"],"names":["message","Card","sx","mb","padding","Avatar","alt","src","avatar","Typography","fontSize","id","name","ListItem","Person","color","grey","mr","className","styles","to","reduxForm","form","props","handleSubmit","onSubmit","Field","component","type","Messages","messages","users","addMessage","dispatch","useDispatch","Grid","container","spacing","item","xs","List","map","user","text","formData","messageForm","trim","compose","withAuthRedirect","useAppSelector","state","messagesPage","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}