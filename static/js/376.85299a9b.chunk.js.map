{"version":3,"file":"static/js/376.85299a9b.chunk.js","mappings":"oNACA,EAA4B,0BAA5B,EAAkE,0B,oECOrDA,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,OAClB,UAACC,EAAA,GAAD,CAAUC,UAAWC,EAArB,WACI,SAACC,EAAA,EAAD,WACI,SAAC,KAAD,CAASC,GAAE,mBAAcL,GAAzB,UACI,SAACM,EAAA,EAAD,CAAQC,IAAI,SAASC,IAAKV,GAAgBW,SAGlD,SAACC,EAAA,EAAD,CAAcR,UAAWC,EAAkBQ,QAASd,EAAUe,UAAWb,GAAoB,Y,oBCdrG,EAAiC,gCAAjC,EAA6E,2BAA7E,EAA+G,sBAA/G,EAAiJ,2B,8BCmEjJ,GAAec,EAAAA,EAAAA,IAAuBC,EAAAA,EAAtC,EAnDyB,WACrB,OAAgCC,EAAAA,EAAAA,UAAyB,IAAzD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,YAA5B,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOhB,EAAP,KAAgBqB,EAAhB,KAEMC,GAAmBC,EAAAA,EAAAA,QAAuB,OAEhDC,EAAAA,EAAAA,YAAU,WACN,IAAML,EAAS,IAAIM,UAAU,gEAC7BL,EAAUD,GAEVA,EAAOO,UAAY,SAACC,GAChBT,GAAY,SAAAU,GAAI,wBAAQA,IAAR,OAAiBC,KAAKC,MAAMH,EAAMI,cAEvD,KAEHP,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACZ,UAAAF,EAAiBU,eAAjB,SAA0BC,eAAe,CAACC,SAAU,aACrD,CAACjB,IAEJ,IAAMkB,EAAc,WAChBnC,EAAQoC,SAAR,OAAkBjB,QAAlB,IAAkBA,GAAAA,EAAQkB,KAAKrC,IAC/BqB,EAAW,KASf,OACI,iBAAKlB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,KAChB,UAACkC,EAAA,EAAD,CAAMnC,UAAWC,EAAjB,UACKa,EAASsB,KAAI,SAACvC,EAASwC,GAAV,OAAgB,SAAC3C,GAAD,UAAoBG,GAAPwC,OAC3C,gBAAKC,IAAKnB,QAEd,iBAAKnB,UAAWC,EAAhB,WACI,kBACIsC,YAAY,oBACZC,MAAO3C,EACP4C,WAjBO,SAACC,GACN,UAAVA,EAAEC,KACFX,KAgBQY,SAAU,SAACF,GAAD,OAAOxB,EAAWwB,EAAEG,cAAcL,WAEhD,SAACM,EAAD,CAAaC,QAAQ,WAAWC,SAAS,SAACC,EAAA,EAAD,IAAcC,QAASlB,EAAhE,2BAQVc,GAAcK,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,EAA4B,iBAAO,CACnDE,MAAO,UACPC,gBAAiB,UACjBC,YAAa,UACb,UAAW,CACPD,gBAAiB,UACjBC,YAAa,gB,yBC1EjBC,EAAyBC,EAAQ,MAKrCC,EAAQ,OAAU,EAElB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAEhDG,EAAcH,EAAQ,KAEtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,0CACD,QAEJN,EAAQ,EAAUG","sources":["webpack://social-app-ts/./src/components/Dialogs/Dialog/Dialog.module.css?19be","components/Dialogs/Dialog/Dialog.tsx","webpack://social-app-ts/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Dialogs.tsx","../node_modules/@mui/icons-material/Send.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chat_item\":\"Dialog_chat_item__PUS88\",\"chat_text\":\"Dialog_chat_text__nEvwB\"};","import React from 'react';\r\nimport styles from './Dialog.module.css';\r\n\r\nimport {Avatar, ListItem, ListItemAvatar, ListItemText} from '@mui/material';\r\nimport userAvatar from '../../../assets/img/avatar/avatar.jpg';\r\nimport {MessagesType} from '../Dialogs';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport const Dialog = ({userName, photo, message, userId}: MessagesType) => (\r\n    <ListItem className={styles.chat_item}>\r\n        <ListItemAvatar>\r\n            <NavLink to={`/profile/${userId}`}>\r\n                <Avatar alt=\"Avatar\" src={photo ? photo : userAvatar}/>\r\n            </NavLink>\r\n        </ListItemAvatar>\r\n        <ListItemText className={styles.chat_text} primary={userName} secondary={message ? message : '...'}/>\r\n    </ListItem>\r\n)","// extracted by mini-css-extract-plugin\nexport default {\"chat_container\":\"Dialogs_chat_container__ktkjh\",\"chat_list\":\"Dialogs_chat_list__0XrCr\",\"logo\":\"Dialogs_logo__LCd1y\",\"chat_send\":\"Dialogs_chat_send__J+3RN\"};","import React, {ComponentType, KeyboardEvent, useEffect, useRef, useState} from 'react';\r\nimport {ButtonProps, List} from '@mui/material';\r\nimport {Dialog} from './Dialog/Dialog';\r\nimport Button from '@mui/material/Button';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport styles from './Dialogs.module.css';\r\nimport {compose} from 'redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport styled from '@emotion/styled';\r\n\r\nexport type MessagesType =   {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst DialogsContainer = () => {\r\n    const [messages, setMessages] = useState<MessagesType[]>([]);\r\n    const [socket, setSocket] = useState<WebSocket>();\r\n    const [message, setMessage] = useState('');\r\n\r\n    const messageBottomRef = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        const socket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\r\n        setSocket(socket);\r\n\r\n        socket.onmessage = (event: MessageEvent) => {\r\n            setMessages(prev => [...prev, ...JSON.parse(event.data)]);\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        messageBottomRef.current?.scrollIntoView({behavior: 'smooth'});\r\n    }, [messages])\r\n\r\n    const onSendClick = () => {\r\n        message.trim() && socket?.send(message);\r\n        setMessage('');\r\n    }\r\n\r\n    const onSendKeyPress = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'Enter') {\r\n            onSendClick();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.chat_container}>\r\n            <div className={styles.logo}/>\r\n            <List className={styles.chat_list}>\r\n                {messages.map((message, i) => <Dialog key={i} {...message}/>)}\r\n                <div ref={messageBottomRef}/>\r\n            </List>\r\n            <div className={styles.chat_send} >\r\n                <input\r\n                    placeholder=\"Type a message...\"\r\n                    value={message}\r\n                    onKeyPress={onSendKeyPress}\r\n                    onChange={(e) => setMessage(e.currentTarget.value)}\r\n                />\r\n                <ColorButton variant=\"outlined\" endIcon={<SendIcon />} onClick={onSendClick}>Send</ColorButton>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default compose<ComponentType>(withAuthRedirect)(DialogsContainer);\r\n\r\nconst ColorButton = styled(Button)<ButtonProps>(() => ({\r\n    color: '#79C7C5',\r\n    backgroundColor: '#e6f4f6',\r\n    borderColor: '#e6f4f6',\r\n    '&:hover': {\r\n        backgroundColor: '#e6f4f6',\r\n        borderColor: '#79C7C5',\r\n    },\r\n}));\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2.01 21 23 12 2.01 3 2 10l15 2-15 2z\"\n}), 'Send');\n\nexports.default = _default;"],"names":["Dialog","userName","photo","message","userId","ListItem","className","styles","ListItemAvatar","to","Avatar","alt","src","userAvatar","ListItemText","primary","secondary","compose","withAuthRedirect","useState","messages","setMessages","socket","setSocket","setMessage","messageBottomRef","useRef","useEffect","WebSocket","onmessage","event","prev","JSON","parse","data","current","scrollIntoView","behavior","onSendClick","trim","send","List","map","i","ref","placeholder","value","onKeyPress","e","key","onChange","currentTarget","ColorButton","variant","endIcon","Send","onClick","styled","Button","color","backgroundColor","borderColor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}