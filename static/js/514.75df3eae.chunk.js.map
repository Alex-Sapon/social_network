{"version":3,"file":"static/js/514.75df3eae.chunk.js","mappings":"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","sources":["webpack://social-app-ts/./src/components/Users/User/User.module.css?cfea","components/Users/User/User.tsx","webpack://social-app-ts/./src/components/Users/Users.module.css?b9d0","components/Users/Users.tsx","components/Users/users-selectors.ts","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user_item\":\"User_user_item__GGpmi\"};","import {Avatar, Divider, FormControlLabel, ListItem, ListItemAvatar, ListItemText, Switch} from '@mui/material';\r\nimport {NavLink} from 'react-router-dom';\r\nimport userAvatar from '../../../assets/img/avatar/avatar.jpg';\r\nimport React from 'react';\r\nimport styles from './User.module.css';\r\nimport {UserType} from '../users-reducer';\r\n\r\ntype UserPropsType = {\r\n    user: UserType\r\n    followingProgress: number[]\r\n    followUnfollow: ({userId, isFollow}: {userId: number, isFollow: boolean}) => void\r\n}\r\n\r\nexport const User = ({user, followingProgress, followUnfollow}: UserPropsType) => {\r\n    const onFollowClick = () => followUnfollow({userId: user.id, isFollow: true});\r\n    const onUnfollowClick = () => followUnfollow({userId: user.id,  isFollow: false});\r\n\r\n    return (\r\n        <>\r\n            <ListItem className={styles.user_item}>\r\n                <ListItemAvatar sx={{width: '150px'}}>\r\n                    <NavLink to={`/profile/${user.id}`}>\r\n                        <Avatar\r\n                            alt=\"Avatar\"\r\n                            src={user.photos.small ? user.photos.small : userAvatar}\r\n                            sx={{mb: '0.5rem'}}\r\n                        />\r\n                    </NavLink>\r\n                    <FormControlLabel\r\n                        sx={{display: 'block'}}\r\n                        disabled={followingProgress.some(id => id === user.id)}\r\n                        label={user.followed ? 'Unfollow' : 'Follow'}\r\n                        control={\r\n                            <Switch\r\n                                checked={user.followed}\r\n                                onChange={user.followed ? onUnfollowClick : onFollowClick}\r\n                                name=\"loading\" color=\"success\"\r\n                            />}\r\n                    />\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                    sx={{width: '50%'}}\r\n                    primary={user.name}\r\n                    secondary={user.status ? user.status : 'No status...'}\r\n                />\r\n            </ListItem>\r\n            <Divider variant=\"inset\" component=\"li\"/>\r\n        </>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Users_list__cImKg\"};","import React, {ChangeEvent} from 'react';\r\nimport {List, Pagination, Stack} from '@mui/material';\r\nimport {Preloader} from '../../common/Preloader';\r\nimport {UsersContainerType} from './UsersContainer';\r\nimport {User} from './User/User';\r\nimport styles from './Users.module.css';\r\n\r\ntype UsersTypeProps = UsersContainerType & {\r\n    onChangePage: (page: number) => void\r\n}\r\n\r\nexport const Users = (props: UsersTypeProps) => {\r\n    const {\r\n        onChangePage,\r\n        totalUsersCount,\r\n        page,\r\n        isFetching,\r\n        users,\r\n        followingProgress,\r\n        followUnfollow,\r\n        count\r\n    } = props;\r\n\r\n    const onChangePageHandler = (e: ChangeEvent<unknown>, page: number) => onChangePage(page);\r\n\r\n    const pageCount = Math.ceil(totalUsersCount / count);\r\n\r\n    return (\r\n        <div className={styles.users_container}>\r\n            <Stack spacing={2} sx={{m: '1rem 0rem 2rem', alignItems: 'center'}}>\r\n                <Pagination count={pageCount} page={page} onChange={onChangePageHandler}/>\r\n            </Stack>\r\n            {isFetching\r\n                ? <Preloader/>\r\n                : <List className={styles.list}>\r\n                    {users.map(user =>\r\n                        <User\r\n                            key={user.id}\r\n                            user={user}\r\n                            followingProgress={followingProgress}\r\n                            followUnfollow={followUnfollow}\r\n                        />)}\r\n                </List>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n","import {AppStateType} from '../../redux/redux-store';\r\nimport {createSelector} from 'reselect';\r\n\r\nconst getUsersSelector = (state: AppStateType) => state.usersPage.users;\r\n\r\nexport const getPageSize = (state: AppStateType) => state.usersPage.count;\r\n\r\nexport const getTotalCount = (state: AppStateType) => state.usersPage.totalCount;\r\n\r\nexport const getPage = (state: AppStateType) => state.usersPage.page;\r\n\r\nexport const getIsFetching = (state: AppStateType) => state.usersPage.isLoading;\r\n\r\nexport const getFollowingProgress = (state: AppStateType) => state.usersPage.followingProgress;\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => users);","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {Users} from './Users';\r\nimport {fetchUsers, followUnfollow, UserType} from './users-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {\r\n    getFollowingProgress, getIsFetching, getPage, getPageSize, getTotalCount, getUsers\r\n} from './users-selectors';\r\n\r\ntype MapStatePropsType = {\r\n    users: UserType[]\r\n    count: number\r\n    totalUsersCount: number\r\n    page: number\r\n    isFetching: boolean\r\n    followingProgress: number[]\r\n};\r\n\r\ntype MapDispatchPropsType = {\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    fetchUsers: ({page, count}: { page: number, count: number }) => void\r\n    followUnfollow: ({userId, isFollow}: { userId: number, isFollow: boolean }) => void\r\n};\r\n\r\nexport type UsersContainerType = MapStatePropsType & MapDispatchPropsType;\r\n\r\nclass UsersContainer extends React.Component<UsersContainerType> {\r\n    componentDidMount() {\r\n        this.props.fetchUsers({page: this.props.page, count: this.props.count});\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: Readonly<UsersContainerType>, nextState: Readonly<UsersContainerType>): boolean {\r\n        return nextProps !== this.props || nextState !== this.state;\r\n    }\r\n\r\n    onChangePage = (page: number) => {\r\n        this.props.fetchUsers({page, count: this.props.count});\r\n    }\r\n\r\n    render() {\r\n        return <Users {...this.props} onChangePage={this.onChangePage}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n        users: getUsers(state),\r\n        count: getPageSize(state),\r\n        totalUsersCount: getTotalCount(state),\r\n        page: getPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state),\r\n    }\r\n)\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {fetchUsers, followUnfollow}),\r\n    withAuthRedirect,\r\n)(UsersContainer);\r\n\r\n"],"names":["User","user","followingProgress","followUnfollow","ListItem","className","styles","ListItemAvatar","sx","width","to","id","Avatar","alt","src","photos","small","userAvatar","mb","FormControlLabel","display","disabled","some","label","followed","control","Switch","checked","onChange","userId","isFollow","name","color","ListItemText","primary","secondary","status","Divider","variant","component","Users","props","onChangePage","totalUsersCount","page","isFetching","users","count","pageCount","Math","ceil","Stack","spacing","m","alignItems","Pagination","e","Preloader","List","map","getPageSize","state","usersPage","getTotalCount","totalCount","getPage","getIsFetching","isLoading","getFollowingProgress","getUsers","createSelector","UsersContainer","fetchUsers","this","nextProps","nextState","React","compose","connect","withAuthRedirect"],"sourceRoot":""}